name: Binary Build And Release
run-name: ${{ github.actor }} building the binary using nuitka 🚀
on: [push]
jobs:
  Binary-Build:
    name: Build binary using nuitka
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - name: Build and run Docker image
        run: |
          docker build -t one_installer:latest .
          docker run -d --name ansika one_installer:latest
      - name: Copy file from Docker container
        run: |
          docker cp ansika:/code/executor.bin /tmp/executor.bin 
      - name: Store artifact
        uses: actions/upload-artifact@v2
        with:
          name: executor.bin
          path: /tmp/executor.bin 

      - run: echo "🍏 This job's status is ${{ job.status }}."
  Binary-Release:
    name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./executor.bin
          asset_name: executor.bin
          asset_content_type: application/octet-stream
      
